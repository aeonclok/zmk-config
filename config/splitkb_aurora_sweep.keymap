/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define BASE 0
#define BASE_MAC 1



#define AS(keycode) &as LS(keycode) keycode

#define KEYS_L 0 1 2 3 4 10 11 12 13 14 20 21 22 23 24
#define KEYS_R 5 6 7 8 9 15 16 17 18 19 25 26 27 28 29
#define KEYS_T 30 31 32 34  


#define COMBO_TERM_FAST 40
#define COMBO_TERM_SLOW 50
#define COMBO_GLOBAL_QUICKTAP 100

#define HM_TAPPING_TERM 300
#define HM_TAPPING_TERM_FAST 200

&mt {
  //  flavor = "tap-preferred";
   // tapping_term_ms = <200>;
};

/ { 

    combos {
        compatible = "zmk,combos";

        combo_toggle_win_mac {
            timeout-ms = <50>;
            key-positions = <30 31 32 33>;
            layers = <BASE BASE_MAC>;
            bindings = <&tog BASE_MAC>;
        };

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            layers = <BASE BASE_MAC>;
            bindings = <&kp ESC>;
        };

        combo_bracket_round_l {
            timeout-ms = <COMBO_TERM_FAST>;
            global-quick-tap-ms = <COMBO_GLOBAL_QUICKTAP>;
            layers = <BASE BASE_MAC>;
            key-positions = <12 13>;
            bindings = <&kp LS(NUMBER_8)>;
        };

        combo_bracket_round_r {
            timeout-ms = <COMBO_TERM_FAST>;
            global-quick-tap-ms = <COMBO_GLOBAL_QUICKTAP>;
            layers = <BASE BASE_MAC>;
            key-positions = <16 17>;
            bindings = <&kp LS(NUMBER_9)>;
        };

        combo_bracket_square_l {
            timeout-ms = <COMBO_TERM_SLOW>;
            global-quick-tap-ms = <COMBO_GLOBAL_QUICKTAP>;
            layers = <BASE BASE_MAC>;
            key-positions = <22 23>;
            bindings = <&kp RA(NUMBER_8)>;
        };

        combo_bracket_square_r {
            timeout-ms = <COMBO_TERM_SLOW>;
            global-quick-tap-ms = <COMBO_GLOBAL_QUICKTAP>;
            layers = <BASE BASE_MAC>;
            key-positions = <26 27>;
            bindings = <&kp RA(NUMBER_9)>;
        };

        combo_bracket_curly_l_mac {
            timeout-ms = <COMBO_TERM_SLOW>;
            global-quick-tap-ms = <COMBO_GLOBAL_QUICKTAP>;
            layers = <BASE_MAC>;
            key-positions = <2 3>;
            bindings = <&kp LA(LS(NUMBER_8))>;
        };

        combo_bracket_curly_r_mac {
            timeout-ms = <COMBO_TERM_SLOW>;
            global-quick-tap-ms = <COMBO_GLOBAL_QUICKTAP>;
            layers = <BASE_MAC>;
            key-positions = <6 7>;
            bindings = <&kp LA(LS(NUMBER_9))>;
        };
        combo_bracket_curly_l_win {
            timeout-ms = <COMBO_TERM_SLOW>;
            global-quick-tap-ms = <COMBO_GLOBAL_QUICKTAP>;
            layers = <BASE>;
            key-positions = <2 3>;
            bindings = <&kp RA(NUMBER_7)>;
        };

        combo_bracket_curly_r_win {
            timeout-ms = <COMBO_TERM_SLOW>;
            global-quick-tap-ms = <COMBO_GLOBAL_QUICKTAP>;
            layers = <BASE>;
            key-positions = <6 7>;
            bindings = <&kp RA(NUMBER_0)>;
        };

        combo_bracket_angled_l_win {
            timeout-ms = <COMBO_TERM_SLOW>;
            global-quick-tap-ms = <COMBO_GLOBAL_QUICKTAP>;
            layers = <BASE>;
            key-positions = <13 14>;
            bindings = <&kp NON_US_BSLH>;
        };

        combo_bracket_angled_r_win {
            timeout-ms = <COMBO_TERM_SLOW>;
            global-quick-tap-ms = <COMBO_GLOBAL_QUICKTAP>;
            layers = <BASE>;
            key-positions = <15 16>;
            bindings = <&kp LS(NON_US_BSLH)>;
        };

        combo_bracket_angled_l_mac {
            timeout-ms = <COMBO_TERM_SLOW>;
            global-quick-tap-ms = <COMBO_GLOBAL_QUICKTAP>;
            layers = <BASE_MAC>;
            key-positions = <13 14>;
            bindings = <&kp GRAVE>;
        };

        combo_bracket_angled_r_mac {
            timeout-ms = <COMBO_TERM_SLOW>;
            global-quick-tap-ms = <COMBO_GLOBAL_QUICKTAP>;
            layers = <BASE_MAC>;
            key-positions = <15 16>;
            bindings = <&kp LS(GRAVE)>;
        };
    };

    behaviors {

        // Positional Homerow mods
        // Homerow mods that prevent accidental activations when rolling keys,
        // such as when typing `st` or `ne` on colemak-dh layouts or `as` on
        // qwerty.
        //
        // Works by only allowing a mod to activate within tapping-term if
        // it's on the opposite side of the keyboard or on the same side thumb
        // keys.

        // Further optimization using urob's timerless homerow mods method:
        // https://github.com/urob/zmk-config#timeless-homerow-mods
        hm_l: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT";
            #binding-cells = <2>;
            bindings = <&kp>,  <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM>;
            quick-tap-ms = <175>;                // repeat on tap-into-hold
            global-quick-tap-ms = <150>;         // requires PR #1387
            hold-trigger-key-positions = <KEYS_R KEYS_T>;
            hold-trigger-on-release;             // requires PR #1423
        };

        hm_r: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM>;
            quick_tap_ms = <175>;
            global-quick-tap-ms = <150>;         // requires PR #1387
            hold-trigger-key-positions = <KEYS_L KEYS_T>;
            hold-trigger-on-release;             // requires PR #1423
        };


        // Positional Homerow mods for shift
        // Use faster tapping term and disable some features that may
        // cause false negatives.
        hm_ls: hm_ls {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_FAST_LEFT";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM_FAST>;
            quick_tap_ms = <175>;
            // global-quick-tap-ms = <150>;         // requires PR #1387
            hold-trigger-key-positions = <KEYS_R KEYS_T>;
            // hold-trigger-on-release;             // requires PR #1423
        };

        hm_rs: hm_rs {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_FAST_RIGHT";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM_FAST>;
            quick_tap_ms = <175>;
            // global-quick-tap-ms = <150>;         // requires PR #1387
            hold-trigger-key-positions = <KEYS_L KEYS_T>;
            // hold-trigger-on-release;             // requires PR #1423
        };

        /*
         * Non-Positional Homerow Mods
         * Used for &mm_grescm_gui behavior on left hand.
         *
         * Usage: &hm LSHFT T
         * Tap: T
         * Tap-Tap-Hold: Repeat T
         * Hold: LSHIFT
         */
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM>;
            quick_tap_ms = <200>;
        };

    };

    keymap {
                compatible = "zmk,keymap";

       	default_layer_win{
		bindings = <
        // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮    ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
                &kp Q       &kp D           &kp J           &kp P       &kp G 				&kp F        &kp R         &kp U         &kp Y       &kp SEMI 
		// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤    ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
            &hm_l LCTRL A  &hm_l LALT L &hm_l LGUI S  &hm_ls LSHFT T   &kp K             &kp H      &hm_rs RSHFT N  &hm_r RGUI E  &hm_r RALT I &hm_r RCTRL O
		// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤    ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
		      &mt LSFT Z    &kp X           &kp C       &kp V           &kp B				&kp W       &kp M        &kp QUOT       &kp DOT       &kp COMMA
		// ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤    ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────╯
          			                                    &lt 1 TAB      &kp BSPC  		  &kp SPC       &lt 2 RET	
        //                                           ╰─────────────┼─────────────┤    ├─────────────┼─────────────╯
		>;
		};       	
        
        default_layer_mac {
		bindings = <
        // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮    ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
                &kp Q       &kp D           &kp J           &kp P       &kp G 				&kp F        &kp R         &kp U         &kp Y       &kp SEMI 
		// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤    ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
            &hm_l LCTRL A  &hm_l LALT L &hm_l LGUI S  &hm_ls LSHFT T   &kp K             &kp H      &hm_rs RSHFT N  &hm_r RGUI E  &hm_r RALT I &hm_r RCTRL O
		// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤    ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
		      &mt LSFT Z    &kp X           &kp C       &kp V           &kp B				&kp W       &kp M        &kp QUOT       &kp DOT       &kp COMMA
		// ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤    ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────╯
          			                                    &lt 1 TAB      &kp BSPC  		  &kp SPC       &lt 2 RET	
        //                                           ╰─────────────┼─────────────┤    ├─────────────┼─────────────╯
		>;
		};

       	left_layer {
		bindings = <
        // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮    ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
		       &kp NUM_1    &kp NUM_2     &kp NUM_3     &kp NUM_4     &kp NUM_5		    &kp NUM_6      &kp NUM_7     &kp NUM_8     &kp NUM_9     &kp NUM_0 
		// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤    ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
		      &kp TAB       &kp LC(S)      &kp DQT      &kp PIPE2     &kp HASH 		     &kp MINUS      &kp EQL      &kp LBKT       &kp RBKT      &kp DEL 
		// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤    ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
		        &kp ESC     &kp TILDE  &kp NON_US_BSLH &kp NON_US_HASH &kp TILDE2 	    &kp MINUS     &kp GRAVE      &kp LBKT       &kp RBKT      &kp DEL 
		// ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤    ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────╯
					                                     &mo 1         &kp LGUI  		  &kp RGUI       &mo 2 
        //                                           ╰─────────────┼─────────────┤    ├─────────────┼─────────────╯
		>;
		};

		right_layer {
		bindings = <
        // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮    ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
		        &kp BANG    &kp ATSN      &kp HASH      &kp DLLR      &kp PRCT    		  &kp CRRT      &kp AMPS    &kp KMLT       &kp LPRN      &kp RPRN 
		// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤    ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
		        &kp HASH    &kp QMARK     &kp FSLH      &kp COLN      &kp SCLN 			  &kp MINUS   &kp KP_EQUAL   &kp LBRC      &kp RBRC      &kp BKSP
		// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤    ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
		        &kp LSFT    &kp KPLS      &kp LBKT      &kp RBKT      &kp BSLH    		  &kp UNDER     &kp LEFT    &kp DOWN        &kp UP       &kp RIGHT
		// ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤    ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────╯
					                                      &mo 3       &kp LCTL  		   &kp SPC       &mo 2 
        //                                           ╰─────────────┼─────────────┤    ├─────────────┼─────────────╯
		>;
		};	

		tri_layer {
		bindings = <
        // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮    ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
		        &kp NUM_1   &kp NUM_2     &kp NUM_3    &kp NUM_4    &kp NUM_5 			   &trans       &trans         &trans       &trans        &trans
		// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤    ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
		        &kp F1      &kp F2          &kp F3      &kp F4         &kp F5  			   &trans       &kp PG_UP  &kp K_VOL_UP    &kp K_MUTE     &trans 
		// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤    ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
		      &bt BT_CLR    &bt BT_NXT   &bt BT_PRV     &kp F6         &kp F7   		   &trans       &kp PG_DN  &kp K_VOL_DN     &trans        &trans   
		// ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤    ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────╯
					                                    &trans         &trans  		       &trans       &trans 
        //                                           ╰─────────────┼─────────────┤    ├─────────────┼─────────────╯
		>;
		};	
        
	};
};
